spring:
  application:
    name: k8s-backend-user

  kafka:
    listener:
      # Kafka 리스너가 메시지를 ack 하는 방법 정의
      # 수동으로 ack해야 offset이 commit되도록 설정
      ack-mode: manual_immediate

    consumer:
      # Consumer(reader)가 key와 value를 어떤 형식으로 디코딩할지 결정
      group-id: ${spring.application.name}
      # key는 StringDeserializer: 문자열로 해석
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # value는 JsonDeserializer: JSON을 자바 객체로 역직렬화
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      # Kafka가 자동으로 offset을 commit하지 않음! (수동)
      enable-auto-commit: false
      # consumer group이 처음 Kafka 토픽 구독 시, offset이 없으면 가장 최신 offset부터 읽기 시작
      auto-offset-reset: latest
      # 한 번의 poll() 호출로 가져올 수 있는 최대 메시지 개수 10개
      max-poll-records: 10
      properties:
        # 역직렬화 시, 모든 패키지의 클래스 신뢰
        spring.json.trusted.packages: "*"
        # Kafka 메시지 헤더 포함된 타입 정보 무시
        # 개발자가 직접 설정한 타입으로 역직렬화
        spring.json.use.type.headers: false

    producer:
      # Producer(writer)가 key와 value를 어떤 형식으로 인코딩할지 결정
      # Key는 문자열로 직렬화
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # Value는 JSON 형태로 직렬화
      -serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # Kafka 메시지에 Java 타입 정보가 담긴 헤더 추가 안함
        # Consumer 쪽에서 user.type.headers: false로 설정한 것과 맞추기
        spring.json.add.type.headers: false # 타입 헤더 추가 비활성화